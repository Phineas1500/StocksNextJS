// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  balance   Decimal  @default(10000.00) @db.Decimal(10, 2) // Starting balance of $10,000
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  portfolio    Portfolio?
  transactions Transaction[]
}

model Company {
  id          String   @id @default(cuid())
  symbol      String   @unique // Stock symbol (e.g., AAPL)
  name        String
  description String   @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  stockPrices StockPrice[]
  stocks      Stock[]
}

model StockPrice {
  id        String   @id @default(cuid())
  price     Decimal  @db.Decimal(10, 2)
  timestamp DateTime @default(now())

  // Relations
  company   Company @relation(fields: [companyId], references: [id])
  companyId String

  @@index([companyId, timestamp])
}

model Portfolio {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
  stocks Stock[]
}

model Stock {
  id        String   @id @default(cuid())
  quantity  Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id])
  portfolioId String
  company     Company   @relation(fields: [companyId], references: [id])
  companyId   String

  @@unique([portfolioId, companyId])
  @@index([companyId])
}

model Transaction {
  id        String           @id @default(cuid())
  type      TransactionType
  quantity  Int
  price     Decimal         @db.Decimal(10, 2)
  total     Decimal         @db.Decimal(10, 2)
  createdAt DateTime        @default(now())

  // Relations
  user      User   @relation(fields: [userId], references: [id])
  userId    String
  companyId String

  @@index([userId, createdAt])
  @@index([companyId])
}

enum TransactionType {
  BUY
  SELL
}